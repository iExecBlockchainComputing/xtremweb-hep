#!/bin/sh
#=============================================================================
#
#  File    : xwstartpdo.sh
#  Date    : November, 2018
#  Author  : Oleg Lodygensky
#
#  Change log:
#  - Nov 9th,2018 : Oleg Lodygensky; creation
#
#  OS      : Linux, mac os x
#
#  Purpose : this script checks docker usage on worker side
#
# Some environment variables, automatically set by the volunteer resource:
#  - XWJOBUID : this must contain the job UID on worker side
#  - XWSCRATCHPATH : this must contains the directory where drive are stored
#  - XWCPULOAD : this contains expected CPU load in percentage
#  - XWRAMSIZE : this contains expected RAM size
#  - XWDISKSPACE : this contains expected storage capacity
#  - XWPORTS  : this may contain a comma separated ports list
#               ssh  port forwarding localhost:$XWPORTS[0] to guest:22
#               http port forwarding localhost:$XWPORTS[1] to guest:80

#
#  !!!!!!!!!!!!!!!!    DO NOT EDIT    !!!!!!!!!!!!!!!!
#  Remarks : this script is auto generated by install process
#
#=============================================================================


# Copyrights     : iExec
# Author         : Oleg Lodygensky
# Acknowledgment : XtremWeb-HEP is based on XtremWeb-HEP by CNRS
# Web            : https://iex.ec
#
#      This file is part of XtremWeb-HEP.
#
# Copyright [2018] [iExec]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#




THISOS=`uname -s`

case "$THISOS" in

  Darwin )
    DATE_FORMAT='+%Y-%m-%d %H:%M:%S%z'
    ;;

  Linux )
    DATE_FORMAT='--rfc-3339=seconds'
    ;;

  * )
    fatal  "OS not supported ($THISOS)"  TRUE
    ;;

esac

#=============================================================================
#
#  Function  fatal (Message, Force)
#
#=============================================================================
fatal ()
{
  msg="$1"
  FORCE="$2"
  [ "$msg" ]  ||  msg="Ctrl+C"

  echo  "$(date "$DATE_FORMAT")  $SCRIPTNAME  FATAL : $msg"

  exit 1
}

#=============================================================================
#
#  Function  warning (Message)
#
#=============================================================================
warning ()
{
  msg="$1"
  echo  "$(date "$DATE_FORMAT")  $SCRIPTNAME  WARNING : $msg"
  return 0
}

#=============================================================================
#
#  Function  info (Message)
#
#=============================================================================
info ()
{
  msg="$1"
  echo  "$(date "$DATE_FORMAT")  $SCRIPTNAME  INFO : $msg"
  return 0
}

#=============================================================================
#
#  Function  debug (Message)
#
#=============================================================================
debug ()
{
  msg="$1"
  [ "${TESTINGONLY}" = "TRUE" ] && echo  "$(date "$DATE_FORMAT")  $SCRIPTNAME  DEBUG : $msg"
  return 0
}

#=============================================================================
#
#  Main
#
#=============================================================================
trap  fatal  INT  TERM



SCRIPTNAME="$(basename "$0")"

[ -z "$XWJOBUID" ] && fatal "XWJOBUID is not set"


ARGS=$*

IMAGENAME="${XWDOCKERIMAGE}"
CONTAINERNAME="iexecpdo"
IEXECDIRNAME="iexec"
PDOWORKINGDIR="/tmp/pdo/${IEXECDIRNAME}"

[ -d ${PDOWORKINGDIR} ] || mkdir -p ${PDOWORKINGDIR}
ln -s ${PDOWORKINGDIR} . || fatal "can't link ${PDOWORKINGDIR}"
cd ${IEXECDIRNAME}
rm -f *

PDOARGS=""
if [ ! -z "${PDOENABLED}" ] ; then
	PDOARGS="--device=/dev/isgx -v /var/run/aesmd:/var/run/aesmd"
fi

ENVFILENAME="/tmp/env_${XWJOBUID}.list"
printenv | grep -vE "HOSTNAME|TERM|LS_COLORS|PATH|PWD|SHLVL|HOME|_|SHELL|TERM|SSH|LC_|LANG|LOG|XDG_RUNTIME_DIR|LESS|USER|MAIL"> ${ENVFILENAME}

# the container must have been launched in ${PDOWORKINGDIR} using the following command
#docker run ${PDOARGS} -v ${PDOWORKINGDIR}:/iexec --rm --name ${CONTAINERNAME} --env-file ${ENVFILENAME} ${IMAGENAME} ${ARGS} 2>&1 |  grep -vE "Unable to find image|Pulling from|Pull complete|Digest:|Status:|: Pulling fs layer|: Verifying Checksum|: Download complete|: Already exists"


docker exec  --workdir /${IEXECDIRNAME} ${CONTAINERNAME} ${ARGS} 2>&1

cd ..
mv ${IEXECDIRNAME}/* .
rm -Rf ${IEXECDIRNAME}


rm ${ENVFILENAME}


exit 0
###########################################################
#     EOF        EOF     EOF        EOF     EOF       EOF #
###########################################################
